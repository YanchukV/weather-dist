{"version":3,"sources":["app/components/CurrentWeather/style.module.scss","app/components/Filter/style.module.scss","app/components/Forecast/style.module.scss","app/redux/types.js","app/redux/reducers/weather.js","app/init/rootReducer.js","app/init/middleware.js","app/init/store.js","app/api/index.js","app/api/config.js","app/redux/actions/weather.js","app/hooks/useFilter.js","app/components/Filter/radioButton.js","app/components/Filter/textInput.js","app/components/Filter/index.js","app/components/getDate.js","app/components/ucFirst.js","app/hooks/useSort.js","app/hooks/useFetch.js","app/hooks/useCurrent.js","app/components/Forecast/index.js","app/components/CurrentWeather/index.js","app/App.js","serviceWorker.js","index.js"],"names":["module","exports","types","initialState","data","filtered","current","isFetching","error","toFilterPayload","maxTemperature","minTemperature","typeWeather","type","weather","length","filter","temperature","rootReducer","combineReducers","state","payload","id","item","objectId","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","applyMiddleware","api","Object","freeze","forecast","fetch","method","weatherActions","showWeather","toFilter","startFetching","stopFetching","fill","setFetchingError","fetchAsync","dispatch","a","response","status","json","results","useFilter","useSelector","useDispatch","_weather","RadioButton","label","props","useField","field","meta","className","Styles","radio","htmlFor","cx","checkbox","selected","checked","touched","TextInput","title","undefined","Filter","schema","yup","shape","when","is","then","required","enableReinitialize","validationSchema","initialValues","onSubmit","value","name","getDate","localeMoment","moment","locale","weekDay","format","dateDay","dateMonth","ucFirst","str","toUpperCase","slice","useSort","useEffect","useFetch","dataSorted","sort","b","day","useCurrent","_id","Forecast","articlesJSX","none","map","forecastCX","key","onClick","CurrentWeather","rest","humidity","rain_probability","head","icon","rainy","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1247d39b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"style_head__1KiL5\",\"head-none\":\"style_head-none__N71n6\",\"cloudy\":\"style_cloudy__AHuzO\",\"rainy\":\"style_rainy__1FSeb\",\"sunny\":\"style_sunny__1mcIj\",\"icon\":\"style_icon__1C-ZA\",\"current-date\":\"style_current-date__3KHvz\",\"current-weather\":\"style_current-weather__byOys\",\"current-month\":\"style_current-month__344Yl\",\"temperature\":\"style_temperature__3N-K8\",\"meta\":\"style_meta__38Ms2\",\"humidity\":\"style_humidity__Xdphh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"style_filter__VpF8V\",\"radio-group\":\"style_radio-group__1f8pr\",\"radio\":\"style_radio__2v_lA\",\"checkbox\":\"style_checkbox__XSxmG\",\"error\":\"style_error__3gtUy\",\"selected\":\"style_selected__DdCcv\",\"custom-input\":\"style_custom-input__QRIPV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"none\":\"style_none__3Zbij\",\"forecast\":\"style_forecast__3GNHc\",\"day\":\"style_day__7aqcm\",\"selected\":\"style_selected__2Uk0d\",\"cloudy\":\"style_cloudy__35rLH\",\"rainy\":\"style_rainy__60J5l\",\"sunny\":\"style_sunny__1cTfF\"};","export const types = {\r\n\tWEATHER_SHOW: 'WEATHER_SHOW',\r\n\tWEATHER_TO_FILTER: 'WEATHER_TO_FILTER',\r\n\tWEATHER_START_FETCHING: 'WEATHER_START_FETCHING',\r\n\tWEATHER_STOP_FETCHING: 'WEATHER_STOP_FETCHING',\r\n\tWEATHER_FILL: 'WEATHER_FILL',\r\n\tWEATHER_SET_FETCHING_ERROR: 'WEATHER_SET_FETCHING_ERROR',\r\n\tWEATHER_FETCH_ASYNC: 'WEATHER_FETCH_ASYNC',\r\n};\r\n","import { types } from '../types';\r\n\r\nconst initialState = {\r\n\tdata: [],\r\n\tfiltered: null,\r\n\tcurrent: [],\r\n\tisFetching: false,\r\n\terror: false,\r\n};\r\n\r\nconst toFilterPayload = (\r\n\t{ data },\r\n\t{ maxTemperature, minTemperature, type: typeWeather }\r\n) => {\r\n\tconst toFilterTypeWeather = ({ type }) => {\r\n\t\treturn type === typeWeather;\r\n\t};\r\n\tconst toFilterTemperature = ({ temperature }) => {\r\n\t\tif (minTemperature <= maxTemperature) {\r\n\t\t\treturn temperature <= maxTemperature && temperature >= minTemperature;\r\n\t\t}\r\n\t\tif (minTemperature && !maxTemperature) {\r\n\t\t\treturn temperature >= minTemperature;\r\n\t\t}\r\n\t\tif (maxTemperature && !minTemperature) {\r\n\t\t\treturn temperature <= maxTemperature;\r\n\t\t}\r\n\t};\r\n\r\n\tconst weather = typeWeather.length ? data.filter(toFilterTypeWeather) : data;\r\n\r\n\treturn minTemperature.length || maxTemperature.length\r\n\t\t? weather.filter(toFilterTemperature)\r\n\t\t: weather;\r\n};\r\n\r\nexport const weatherReducer = (state = initialState, { type, payload, id }) => {\r\n\tswitch (type) {\r\n\t\tcase types.WEATHER_START_FETCHING:\r\n\t\t\treturn { ...state, isFetching: true };\r\n\t\tcase types.WEATHER_STOP_FETCHING:\r\n\t\t\treturn { ...state, isFetching: false };\r\n\t\tcase types.WEATHER_FILL:\r\n\t\t\treturn { ...state, data: payload };\r\n\t\tcase types.WEATHER_SET_FETCHING_ERROR:\r\n\t\t\treturn { ...state, error: payload };\r\n\t\tcase types.WEATHER_TO_FILTER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrent: [],\r\n\t\t\t\tfiltered: toFilterPayload(state, payload),\r\n\t\t\t};\r\n\t\tcase types.WEATHER_SHOW:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrent: [...state.data.filter(item => item.objectId === id)],\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","// Core\r\nimport { combineReducers } from 'redux';\r\n\r\n// Reducers\r\n\r\nimport { weatherReducer as weather } from '../redux/reducers/weather';\r\n\r\nexport const rootReducer = combineReducers({\r\n\tweather,\r\n});\r\n","// Core\r\nimport { compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst developmentEnvironment = process.env.NODE_ENV === 'development';\r\nconst devtools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\nconst composeEnhancers =\r\n\tdevelopmentEnvironment && devtools ? devtools : compose;\r\n\r\nconst middleware = [thunk];\r\n\r\nexport { composeEnhancers, middleware };\r\n","// Core\r\nimport { createStore, applyMiddleware } from 'redux';\r\n\r\n// Instruments\r\nimport { rootReducer } from './rootReducer';\r\nimport { composeEnhancers, middleware } from './middleware';\r\n\r\nexport const store = createStore(\r\n\trootReducer,\r\n\tcomposeEnhancers(applyMiddleware(...middleware))\r\n);\r\n","import { root } from './config';\r\n\r\nexport const api = Object.freeze({\r\n\tforecast: {\r\n\t\tfetch: () => {\r\n\t\t\treturn fetch(`${root}/forecast`, {\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t});\r\n\t\t},\r\n\t},\r\n});\r\n","export const root =\r\n\t'https://api.backendless.com/520C1D14-9413-E1AA-FF78-\\n' +\r\n\t'6A4DB0E26E00/9C9A66AC-959A-D6F4-FFAB-BD991AA34A00/data';\r\n","import { types } from '../types';\r\nimport { api } from '../../api';\r\n\r\nexport const weatherActions = {\r\n\tshowWeather: id => {\r\n\t\treturn {\r\n\t\t\ttype: types.WEATHER_SHOW,\r\n\t\t\tid,\r\n\t\t};\r\n\t},\r\n\ttoFilter: payload => {\r\n\t\treturn {\r\n\t\t\ttype: types.WEATHER_TO_FILTER,\r\n\t\t\tpayload,\r\n\t\t};\r\n\t},\r\n\tstartFetching: () => {\r\n\t\treturn {\r\n\t\t\ttype: types.WEATHER_START_FETCHING,\r\n\t\t};\r\n\t},\r\n\tstopFetching: () => {\r\n\t\treturn {\r\n\t\t\ttype: types.WEATHER_STOP_FETCHING,\r\n\t\t};\r\n\t},\r\n\tfill: payload => {\r\n\t\treturn {\r\n\t\t\ttype: types.WEATHER_FILL,\r\n\t\t\tpayload,\r\n\t\t};\r\n\t},\r\n\tsetFetchingError: error => {\r\n\t\treturn {\r\n\t\t\ttype: types.WEATHER_SET_FETCHING_ERROR,\r\n\t\t\tpayload: error,\r\n\t\t\terror: true,\r\n\t\t};\r\n\t},\r\n\tfetchAsync: () => async dispatch => {\r\n\t\tdispatch({\r\n\t\t\ttype: types.WEATHER_FETCH_ASYNC,\r\n\t\t});\r\n\r\n\t\tdispatch(weatherActions.startFetching());\r\n\r\n\t\tconst response = await api.forecast.fetch();\r\n\r\n\t\tif (response.status === 200) {\r\n\t\t\tconst results = await response.json();\r\n\t\t\tdispatch(weatherActions.fill(results));\r\n\t\t} else {\r\n\t\t\tconst error = {\r\n\t\t\t\tstatus: response.error,\r\n\t\t\t};\r\n\t\t\tdispatch(weatherActions.setFetchingError(error));\r\n\t\t}\r\n\r\n\t\tdispatch(weatherActions.stopFetching());\r\n\t},\r\n};\r\n","import { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { weatherActions } from '../redux/actions/weather';\r\n\r\nexport const useFilter = () => {\r\n\tconst selector = state => state.weather;\r\n\tconst { filtered } = useSelector(selector);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst toFilter = _weather => {\r\n\t\tdispatch(weatherActions.toFilter(_weather));\r\n\t};\r\n\r\n\treturn {\r\n\t\tfiltered,\r\n\t\ttoFilter,\r\n\t};\r\n};\r\n","import React from 'react';\r\nimport { useField } from 'formik';\r\nimport Styles from './style.module.scss';\r\nimport cx from 'classnames';\r\n\r\nexport const RadioButton = ({ label, ...props }) => {\r\n\tconst [field, meta] = useField(props);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<input className={Styles.radio} {...field} {...props} />\r\n\t\t\t<label\r\n\t\t\t\thtmlFor={props.id}\r\n\t\t\t\tclassName={cx({\r\n\t\t\t\t\t[Styles.checkbox]: true,\r\n\t\t\t\t\t[Styles.selected]: field.checked,\r\n\t\t\t\t\t[Styles.error]: meta.touched && meta.error,\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t{label}\r\n\t\t\t</label>\r\n\t\t</>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { useField } from 'formik';\r\nimport Styles from './style.module.scss';\r\n\r\nexport const TextInput = ({ label, ...props }) => {\r\n\tconst [field, meta] = useField(props);\r\n\treturn (\r\n\t\t<p className={Styles['custom-input']}>\r\n\t\t\t<label>{props.title}</label>\r\n\t\t\t<input\r\n\t\t\t\ttype='text'\r\n\t\t\t\t{...field}\r\n\t\t\t\t{...props}\r\n\t\t\t\tclassName={meta.touched && meta.error ? Styles.error : undefined}\r\n\t\t\t/>\r\n\t\t</p>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport Styles from './style.module.scss';\r\nimport { Form, Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { useFilter } from '../../hooks/useFilter';\r\nimport { RadioButton } from './radioButton';\r\nimport { TextInput } from './textInput';\r\n\r\nexport const Filter = () => {\r\n\tconst { toFilter } = useFilter();\r\n\r\n\tconst initialValues = {\r\n\t\tmaxTemperature: '',\r\n\t\tminTemperature: '',\r\n\t\ttype: '',\r\n\t};\r\n\r\n\tconst schema = yup.object().shape(\r\n\t\t{\r\n\t\t\tmaxTemperature: yup.string().when(['minTemperature', 'type'], {\r\n\t\t\t\tis: (minTemperature, type) => !minTemperature && !type,\r\n\t\t\t\tthen: yup.string().required(),\r\n\t\t\t}),\r\n\t\t\tminTemperature: yup.string().when(['maxTemperature', 'type'], {\r\n\t\t\t\tis: (maxTemperature, type) => !maxTemperature && !type,\r\n\t\t\t\tthen: yup.string().required(),\r\n\t\t\t}),\r\n\t\t\ttype: yup.string().when(['maxTemperature', 'minTemperature'], {\r\n\t\t\t\tis: (maxTemperature, minTemperature) =>\r\n\t\t\t\t\t!maxTemperature && !minTemperature,\r\n\t\t\t\tthen: yup.string().required(),\r\n\t\t\t}),\r\n\t\t},\r\n\t\t[\r\n\t\t\t['maxTemperature', 'minTemperature'],\r\n\t\t\t['maxTemperature', 'type'],\r\n\t\t\t['minTemperature', 'type'],\r\n\t\t]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className={Styles.filter}>\r\n\t\t\t<Formik\r\n\t\t\t\tenableReinitialize={true}\r\n\t\t\t\tvalidationSchema={schema}\r\n\t\t\t\tinitialValues={initialValues}\r\n\t\t\t\tonSubmit={value => {\r\n\t\t\t\t\ttoFilter(value);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<div className={Styles['radio-group']}>\r\n\t\t\t\t\t\t<RadioButton\r\n\t\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\t\tname='type'\r\n\t\t\t\t\t\t\tid='radio-cloudy'\r\n\t\t\t\t\t\t\tlabel='Облачно'\r\n\t\t\t\t\t\t\tvalue='cloudy'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<RadioButton\r\n\t\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\t\tname='type'\r\n\t\t\t\t\t\t\tid='radio-sunny'\r\n\t\t\t\t\t\t\tlabel='Солнечно'\r\n\t\t\t\t\t\t\tvalue='sunny'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\tid='min-temperature'\r\n\t\t\t\t\t\tname='minTemperature'\r\n\t\t\t\t\t\ttitle='Минимальная температура'\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\tid='max-temperature'\r\n\t\t\t\t\t\tname='maxTemperature'\r\n\t\t\t\t\t\ttitle='Максимальная температура'\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button type='submit'>Отфильтровать</button>\r\n\t\t\t\t</Form>\r\n\t\t\t</Formik>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import moment from 'moment';\r\nimport 'moment/locale/ru';\r\n\r\nexport const getDate = data => {\r\n\tconst localeMoment = moment(data).locale('ru');\r\n\tconst weekDay = localeMoment.format('dddd');\r\n\tconst dateDay = localeMoment.format('DD');\r\n\tconst dateMonth = localeMoment.format('D MMMM');\r\n\treturn {\r\n\t\tweekDay,\r\n\t\tdateDay,\r\n\t\tdateMonth,\r\n\t};\r\n};\r\n","export const ucFirst = str => {\r\n\treturn !str ? str : str[0].toUpperCase() + str.slice(1);\r\n};\r\n","import { getDate } from '../components/getDate';\r\nimport { useFetch } from './useFetch';\r\nimport { useFilter } from './useFilter';\r\n\r\nexport const useSort = () => {\r\n\tconst { data } = useFetch();\r\n\tconst { filtered } = useFilter();\r\n\r\n\tconst dataV = filtered || data;\r\n\r\n\tconst dataSorted = dataV.slice(0, 7).sort((a, b) => {\r\n\t\tconst { dateDay: aDate } = getDate(a.day);\r\n\t\tconst { dateDay: bDate } = getDate(b.day);\r\n\t\treturn aDate - bDate;\r\n\t});\r\n\r\n\treturn {\r\n\t\tdataSorted,\r\n\t};\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { weatherActions } from '../redux/actions/weather';\r\n\r\nexport const useFetch = () => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(weatherActions.fetchAsync());\r\n\t}, [dispatch]);\r\n\r\n\tconst { data, isFetching, error } = useSelector(state => state.weather);\r\n\r\n\treturn {\r\n\t\tdata,\r\n\t\tisFetching,\r\n\t\terror,\r\n\t};\r\n};\r\n","import { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { weatherActions } from '../redux/actions/weather';\r\n\r\nexport const useCurrent = () => {\r\n\tconst selector = state => state.weather;\r\n\tconst { current } = useSelector(selector);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst showWeather = _id => {\r\n\t\tdispatch(weatherActions.showWeather(_id));\r\n\t};\r\n\r\n\treturn {\r\n\t\tcurrent,\r\n\t\tshowWeather,\r\n\t};\r\n};\r\n","import React from 'react';\r\nimport { getDate } from '../getDate';\r\nimport { ucFirst } from '../ucFirst';\r\nimport { useSort } from '../../hooks/useSort';\r\nimport Styles from './style.module.scss';\r\nimport cx from 'classnames';\r\nimport { useCurrent } from '../../hooks/useCurrent';\r\nimport { useFilter } from '../../hooks/useFilter';\r\n\r\nexport const Forecast = () => {\r\n\tconst { dataSorted } = useSort();\r\n\tconst { filtered } = useFilter();\r\n\tconst { showWeather, current } = useCurrent();\r\n\tconst articlesJSX =\r\n\t\tfiltered && !filtered.length ? (\r\n\t\t\t<div className={Styles.none}>\r\n\t\t\t\t<span>По заданным критериям нет доступных дней</span>\r\n\t\t\t</div>\r\n\t\t) : (\r\n\t\t\tdataSorted.map(({ objectId, day, temperature, type }) => {\r\n\t\t\t\tconst { weekDay } = getDate(day);\r\n\t\t\t\tconst { ...rest } = current[0] || dataSorted[0];\r\n\t\t\t\tconst { objectId: id } = rest;\r\n\t\t\t\tconst forecastCX = cx({\r\n\t\t\t\t\t[Styles.day]: true,\r\n\t\t\t\t\t[Styles[type]]: true,\r\n\t\t\t\t\t[Styles.selected]: objectId === id,\r\n\t\t\t\t});\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={forecastCX}\r\n\t\t\t\t\t\tkey={objectId}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tshowWeather(objectId);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<p>{ucFirst(weekDay)}</p>\r\n\t\t\t\t\t\t<span>{temperature}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t);\r\n\r\n\treturn <div className={Styles.forecast}>{articlesJSX}</div>;\r\n};\r\n","import React from 'react';\r\nimport { useCurrent } from '../../hooks/useCurrent';\r\nimport { getDate } from '../getDate';\r\nimport { ucFirst } from '../ucFirst';\r\nimport cx from 'classnames';\r\nimport Styles from './style.module.scss';\r\nimport { useSort } from '../../hooks/useSort';\r\nimport { useFilter } from '../../hooks/useFilter';\r\n\r\nexport const CurrentWeather = () => {\r\n\tconst { filtered } = useFilter();\r\n\tconst { dataSorted } = useSort();\r\n\tconst { current } = useCurrent();\r\n\tconst { ...rest } = current[0] || dataSorted[0] || [];\r\n\tconst { day, temperature, type, humidity, rain_probability } = rest;\r\n\tconst { weekDay, dateMonth } = getDate(day);\r\n\treturn filtered && !filtered.length ? (\r\n\t\t<div className={Styles['head-none']} />\r\n\t) : (\r\n\t\t<>\r\n\t\t\t<div className={Styles.head}>\r\n\t\t\t\t<div className={cx([Styles.icon], [Styles[type]])} />\r\n\t\t\t\t<div className={Styles['current-date']}>\r\n\t\t\t\t\t<p>{ucFirst(weekDay)}</p>\r\n\t\t\t\t\t<div className={Styles['current-month']}>\r\n\t\t\t\t\t\t<span>{dateMonth}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={Styles['current-weather']}>\r\n\t\t\t\t<p className={Styles.temperature}>{temperature}</p>\r\n\t\t\t\t<p className={Styles.meta}>\r\n\t\t\t\t\t<span className={Styles.rainy}>%{rain_probability}</span>\r\n\t\t\t\t\t<span className={Styles.humidity}>%{humidity}</span>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './init/store';\r\nimport { Filter } from './components/Filter/';\r\nimport { Forecast } from './components/Forecast/';\r\nimport { CurrentWeather } from './components/CurrentWeather/';\r\n\r\nexport const App = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Provider store={store}>\r\n\t\t\t\t<main>\r\n\t\t\t\t\t<Filter />\r\n\t\t\t\t\t<CurrentWeather />\r\n\t\t\t\t\t<Forecast />\r\n\t\t\t\t</main>\r\n\t\t\t</Provider>\r\n\t\t</>\r\n\t);\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { App } from './app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}